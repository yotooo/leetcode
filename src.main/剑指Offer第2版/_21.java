package 剑指Offer第2版;

public class _21 {
    /**
     * 剑指 Offer 21. 调整数组顺序使奇数位于偶数前面
     * 输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有奇数在数组的前半部分，所有偶数在数组的后半部分。
     * <p>
     * <p>
     * <p>
     * 示例：
     * <p>
     * 输入：nums = [1,2,3,4]
     * 输出：[1,3,2,4]
     * 注：[3,1,2,4] 也是正确的答案之一。
     * <p>
     * <p>
     * 提示：
     * <p>
     * 0 <= nums.length <= 50000
     * 0 <= nums[i] <= 10000
     */
    public int[] exchange(int[] nums) {
        int start = 0;
        int end = nums.length - 1;
        int temp = 0;
        while (start < end) {
            if (nums[start] % 2 == 0) {
                if (nums[end] % 2 == 0) {
                    end--;
                    continue;
                } else {
                    temp = nums[start];
                    nums[start] = nums[end];
                    nums[end] = temp;
                    start++;
                    end--;
                }
            } else {
                start++;
            }
        }

        return nums;
    }
}
